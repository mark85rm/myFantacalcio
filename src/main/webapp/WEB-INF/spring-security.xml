<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
 
	<http auto-config="true" use-expressions="true" access-denied-page="/accessonegato">
	
	<!--  	<intercept-url pattern="/login*" access="isAnonymous()"/>-->
	<intercept-url pattern="/login*" access="permitAll"/>
	<intercept-url pattern="/user/register" access="permitAll"/>
	<intercept-url pattern="/user/add" access="permitAll"/>
	<intercept-url pattern="/resources/**" access="permitAll"/>
	<intercept-url pattern="/**" access="isFullyAuthenticated()"/>
    
    	
    	<form-login login-page="/login" default-target-url="/home" always-use-default-target="true"
			authentication-failure-url="/loginfailed" />
		<logout logout-success-url="/logout" />
		 <!-- 	
-->
	</http>
	
	<authentication-manager>
	   <authentication-provider>
<!-- 	    <password-encoder hash="sha"/> -->
		<jdbc-user-service data-source-ref="dataSource"
 
		   users-by-username-query="
		      select USERNAME,PASSWORD,ENABLED 
		      from UTENTI where USERNAME= ? " 
 
  		authorities-by-username-query="
		     select u.USERNAME, r.NOME from UTENTI u
				join RUOLI_UTENTI ru on (u.ID = ru.ID_UTENTE)
				join RUOLI r on (r.ID = ru.ID_RUOLO)
		      where u.USERNAME =?  " 
		/>
	   </authentication-provider>
	</authentication-manager>
	
 
</beans:beans>